name: BSN Backend API Pipeline

on:
  push:
    branches:
      - ci/pipeline
      - main
      - develop
      - fix/pipeline
    paths:
      - book-network-api/**
      - docker/backend/**
      - 'docker-compose.yml'
      - 'docker-compose-prod-config.yml'
      - .github/workflows/*-backend.yml
jobs:
  compile:
    runs-on: self-hosted
    name: Compile project
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/checkout@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile projet
        run: |
          cd book-network-api
          mvn clean compile -DskipTests
#          ./mvnw clean compile

  unit-tests:
    runs-on: self-hosted
    name: Unit Tests
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/checkout@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running Unit Tests
        run: |
          cd book-network-api
          mvn clean test
#          ./mvnw clean test

  build:
    runs-on: self-hosted
    name: Build backend
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/checkout@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build backend
        run: |
          cd book-network-api
          mvn clean package -DskipTests
#          ./mvnw clean package

  build-image:
    name: Build Docker image
    runs-on: self-hosted
    needs: [build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/checkout@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          cd book-network-api
          mvn clean package -DskipTests
#          ./mvnw clean package

      - name: Extract project version
        id: extract_version
        run: |
          cd book-network-api
          echo "VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: book-network-api
          file: docker/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:${{ steps.extract_version.outputs.VERSION }},${{ secrets.DOCKERHUB_USERNAME }}/bsn-api:latest
          platforms: linux/amd64
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Deploy Backend
    runs-on: self-hosted
    needs: [build-image]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Create deploy folder
        run: ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} "mkdir -p bsn-ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose-prod-config.yml ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }}:bsn-ci-cd/docker-compose.yml

      - name: Set ENV variable and deploy
        run: |
          ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_IP }} <<EOF
          export EMAIL_HOSTNAME= ${{ secrets.EMAIL_HOSTNAME }}
          export EMAIL_USER_NAME= ${{ secrets.EMAIL_USER_NAME }}
          export EMAIL_PASSWORD= ${{ secrets.EMAIL_PASSWORD }}
          cd bsn-ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose down
          docker-compose -f docker-compose.yml up -d
          EOF